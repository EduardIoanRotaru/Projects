Workflow

Create database Schemas
Seed Data

Authorization and Authentification for each project
Repository Pattern and Specification Pattern
Automapper
DTO's
Services
Controllers


...................................................................... 04.01.2022

Done - Create projects
Done - Rewind netcore cli commands, rewind git commands 
Done - Plan designs for all aps
Done - Install all packages

...................................................................... 09.01.2022

Done - Database Relationships - First UML on paper 
Done - Add Entities 
Done - Update DataContext
Done - Add Dtos
Done - AutoMapper

Done - Sort out the .gitignore and remove all the useless files in repo

...................................................................... 11.01.2022

Generate all tables
Custom modelbuilder where needed - e.g oncascade delete

Done - Fix QuizApp reference problem (Removed class library projects)
Done - ShopApp fix the one-to-many problems
Done - Finish ToDoApp table generation

Check resources for Authentication and Authorization
Add Authentication and Authorization business logic(jwt, Identity, OAuth2 or simply cookies/localstorage)
Postman test each one

Add Login/Register html page for all projects
Add branches for each project backend

Seed Data

Git merge branches with master

...................................................................... 13.01.2022

Add repository pattern or specification pattern where necessary
Chat app, add general chat, list of users, private chat, emoticons. No auth, only localstorage

...................................................................... 14.01.2022

Filter, Pagination, Sort, Search where needed
CRUD where needed

All components in Angular, lazy loading and routing 
"Design" all html pages 

Services 
Components business logic

...................................................................... 21.01.2022

Deploy all

relatii.publice@dsparad.ro

-------------------------------------------------------------------------- Commands to keep in mind
dotnet-ef migrations add InitialCreate -o Data -s ../ToDoAPI
dotnet-ef migrations add " " -o Data/Migrations --project Infrastructure -s JobPortal-MVC
dotnet-ef database update -s JobPortal-MVC

dotnet-ef -h for all overloads

git add -u .
git rm -r --cached path_to_your_folder/

enable-migrations -MigrationsDirectory "Data"